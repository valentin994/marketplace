{"ast":null,"code":"import uuid from 'uuid';\nimport { GET_SERVICES, ADD_SERVICES, DELETE_SERVICE, SERVICES_LOADING } from '../actions/types';\nconst initialState = {\n  services: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_SERVICES:\n      return { ...state\n      };\n\n    case DELETE_SERVICE:\n      return { ...state,\n        services: state.services.filter(service => service.id !== action.payload)\n      };\n\n    case ADD_SERVICES:\n      return { ...state,\n        services: [action.payload, ...state.services]\n      };\n\n    case SERVICES_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/elarvav/Desktop/marketplace/client/src/reducers/serviceReducer.js"],"names":["uuid","GET_SERVICES","ADD_SERVICES","DELETE_SERVICE","SERVICES_LOADING","initialState","services","loading","state","action","type","filter","service","id","payload"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,cAArC,EAAqDC,gBAArD,QAA6E,kBAA7E;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,YAAL;AACI,aAAO,EACH,GAAGO;AADA,OAAP;;AAGJ,SAAKL,cAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeK,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACK,OAAvD;AAFP,OAAP;;AAIJ,SAAKZ,YAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,QAAQ,EAAE,CAACG,MAAM,CAACK,OAAR,EAAiB,GAAGN,KAAK,CAACF,QAA1B;AAFP,OAAP;;AAIJ,SAAKF,gBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHD,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ;AACI,aAAOC,KAAP;AArBR;AAuBH","sourcesContent":["import uuid from 'uuid';\r\nimport { GET_SERVICES, ADD_SERVICES, DELETE_SERVICE, SERVICES_LOADING } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    services: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_SERVICES:\r\n            return {\r\n                ...state\r\n            };\r\n        case DELETE_SERVICE:\r\n            return {\r\n                ...state,\r\n                services: state.services.filter(service => service.id !== action.payload)\r\n            };\r\n        case ADD_SERVICES:\r\n            return {\r\n                ...state,\r\n                services: [action.payload, ...state.services]\r\n            };\r\n        case SERVICES_LOADING:\r\n            return {\r\n                ...state, \r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}