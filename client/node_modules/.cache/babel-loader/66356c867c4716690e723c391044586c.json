{"ast":null,"code":"import axios from 'axios';\nimport { AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, USER_LOADING } from './types';\nimport { returnErrors } from './errorActions';\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({\n    type: USER_LOADING\n  });\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  axios.get('/api/auth/user', config).then(res => dispatch({\n    type: USER_LOADED,\n    payload: res.data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/elarvav/Desktop/marketplace/client/src/actions/authActions.js"],"names":["axios","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","USER_LOADING","returnErrors","loadUser","dispatch","getState","type","token","auth","config","headers","get","then","res","payload","data","catch","err","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,cAJJ,EAKIC,gBALJ,EAMIC,aANJ,EAOIC,WAPJ,EAQIC,YARJ,QASO,SATP;AAUA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClDD,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AAEA,QAAMM,KAAK,GAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B;AACA,QAAME,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAMA,MAAIH,KAAJ,EAAW;AACPE,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACH;;AACDd,EAAAA,KAAK,CAACkB,GAAN,CAAU,gBAAV,EAA4BF,MAA5B,EACKG,IADL,CACUC,GAAG,IAAIT,QAAQ,CAAC;AAClBE,IAAAA,IAAI,EAAEN,WADY;AAElBc,IAAAA,OAAO,EAAED,GAAG,CAACE;AAFK,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAI;AACVb,IAAAA,QAAQ,CAACF,YAAY,CAACe,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACAf,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH,GAVL;AAWH,CAxBM","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    USER_LOADING\r\n} from './types';\r\nimport { returnErrors } from './errorActions'\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    dispatch({ type: USER_LOADING });\r\n\r\n    const token = getState().auth.token;\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    }\r\n\r\n    if (token) {\r\n        config.headers['x-auth-token'] = token;\r\n    }\r\n    axios.get('/api/auth/user', config)\r\n        .then(res => dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        });\r\n}"]},"metadata":{},"sourceType":"module"}