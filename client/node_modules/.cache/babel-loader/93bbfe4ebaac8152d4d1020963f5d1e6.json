{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elarvav\\\\Desktop\\\\marketplace\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: null\n    };\n\n    this.onChange = e => {\n      this.props.clearErrors();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      };\n      this.props.login(user);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"login:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), this.state.msg ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, this.state.msg) : null));\n  }\n\n}\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(Register);","map":{"version":3,"sources":["C:/Users/elarvav/Desktop/marketplace/client/src/components/auth/Login.js"],"names":["React","Component","connect","PropTypes","login","clearErrors","Register","state","email","password","msg","onChange","e","props","setState","target","name","value","onSubmit","preventDefault","user","componentDidUpdate","prevProps","error","id","render","propTypes","isAuthenticated","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    msg: null,\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.props.clearErrors();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const user = {\r\n        email, \r\n        password\r\n    };\r\n    this.props.login(user);\r\n    \r\n  };\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      if (error.id === \"LOGIN_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <label>login:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            onChange={this.onChange}\r\n          />\r\n          <input type=\"submit\" value=\"Login\" />\r\n          {this.state.msg ? <p>{this.state.msg}</p> : null}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(Register);\r\n"]},"metadata":{},"sourceType":"module"}