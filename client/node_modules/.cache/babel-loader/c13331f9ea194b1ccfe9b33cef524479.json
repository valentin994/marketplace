{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elarvav\\\\Desktop\\\\marketplace\\\\client\\\\src\\\\components\\\\Monitoring.js\";\nimport React, { useEffect, userRef, useState } from 'react';\nimport Chartjs from 'chart.js';\nconst chartConfig = {\n  type: \"bar\",\n  data: {},\n  options: {}\n};\n\nconst Monitoring = () => {\n  const chartContainer = userRef(null);\n  const [charInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Monitoring;","map":{"version":3,"sources":["C:/Users/elarvav/Desktop/marketplace/client/src/components/Monitoring.js"],"names":["React","useEffect","userRef","useState","Chartjs","chartConfig","type","data","options","Monitoring","chartContainer","charInstance","setChartInstance","current","newChartInstance"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAC,KADW;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAKhBC,EAAAA,OAAO,EAAE;AALO,CAApB;;AAUA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGR,OAAO,CAAC,IAAD,CAA9B;AACA,QAAM,CAACS,YAAD,EAAeC,gBAAf,IAAmCT,QAAQ,CAAC,IAAD,CAAjD;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGS,cAAc,IAAIA,cAAc,CAACG,OAApC,EAA4C;AACxC,YAAMC,gBAAgB,GAAG,IAAIV,OAAJ,CAAYM,cAAc,CAACG,OAA3B,EAAoCR,WAApC,CAAzB;AACAO,MAAAA,gBAAgB,CAACE,gBAAD,CAAhB;AACH;AACJ,GALQ,EAKP,CAACJ,cAAD,CALO,CAAT;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,GAAG,EAAEA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAhBD;;AAiBA,eAAeD,UAAf","sourcesContent":["import React, {useEffect, userRef, useState} from 'react'\r\nimport Chartjs from 'chart.js';\r\n\r\nconst chartConfig = {\r\n    type:\"bar\",\r\n    data: {\r\n\r\n    },\r\n    options: {\r\n\r\n    }\r\n}\r\n\r\nconst Monitoring = () => {\r\n    const chartContainer = userRef(null);\r\n    const [charInstance, setChartInstance] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(chartContainer && chartContainer.current){\r\n            const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n            setChartInstance(newChartInstance);\r\n        }\r\n    },[chartContainer]);\r\n\r\n    return (\r\n        <div>\r\n            <canvas ref={chartContainer}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Monitoring"]},"metadata":{},"sourceType":"module"}