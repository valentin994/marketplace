{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elarvav\\\\Desktop\\\\marketplace\\\\client\\\\src\\\\components\\\\Services.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./services.scss\";\nexport default function Services() {\n  const [services, setServices] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [pricing, setPricing] = useState([{\n    time: 0,\n    active: false,\n    debt: 0\n  }, {\n    time: 0,\n    active: false,\n    debt: 0\n  }, {\n    time: 0,\n    active: false,\n    debt: 0\n  }]);\n  const [fullDebt, setFullDebt] = useState(0);\n\n  const updatePricing = index => e => {\n    fetch(`/api/service/${services[index]._id}`, {\n      method: \"PUT\",\n      body: !services[index].active\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    let newPrice = [...pricing];\n    let newDebt = newPrice[index].debt;\n\n    if (newPrice[index].active) {\n      newDebt += (new Date().getTime() - newPrice[index].time) / 1000 * services[index].price;\n    }\n\n    newPrice[index] = {\n      time: new Date().getTime(),\n      active: !newPrice[index].active,\n      debt: newDebt\n    };\n    setPricing(newPrice);\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      let currentDebt = pricing.reduce((a, b) => ({\n        debt: a.debt + b.debt\n      }));\n      currentDebt = currentDebt.debt;\n      pricing.map((price, index) => {\n        if (price.time && price.active) {\n          currentDebt += (new Date().getTime() - price.time) / 1000 * services[index].price;\n        }\n      });\n      setFullDebt(Math.round((currentDebt + Number.EPSILON) * 100) / 100);\n    }, 5000);\n    return () => clearInterval(intervalId);\n  });\n  useEffect(() => {\n    fetch(\"/api/service\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setServices(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Services\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Services\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Current debt: \", fullDebt, \"$\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, services.map((service, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: service.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, service.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, service.description, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }), service.metrics, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }), service.price, \" $ per hour\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: updatePricing(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, service.active ? \"Disable\" : \"Activate\")))))));\n  }\n}","map":{"version":3,"sources":["C:/Users/elarvav/Desktop/marketplace/client/src/components/Services.js"],"names":["React","useState","useEffect","Services","services","setServices","isLoaded","setIsLoaded","error","setError","pricing","setPricing","time","active","debt","fullDebt","setFullDebt","updatePricing","index","e","fetch","_id","method","body","then","response","json","data","console","log","catch","newPrice","newDebt","Date","getTime","price","intervalId","setInterval","currentDebt","reduce","a","b","map","Math","round","Number","EPSILON","clearInterval","res","result","message","service","name","description","metrics"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./services.scss\";\r\n\r\nexport default function Services() {\r\n  const [services, setServices] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [pricing, setPricing] = useState([\r\n    { time: 0, active: false, debt: 0 },\r\n    { time: 0, active: false, debt: 0 },\r\n    { time: 0, active: false, debt: 0 },\r\n  ]);\r\n  const [fullDebt, setFullDebt] = useState(0);\r\n\r\n  const updatePricing = (index) => (e) => {\r\n    fetch(`/api/service/${services[index]._id}`,{\r\n      method: \"PUT\",\r\n      body: !services[index].active\r\n    }).then(response => response.json())\r\n    .then(data => {\r\n      console.log('Success:', data);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n\r\n    let newPrice = [...pricing];\r\n    let newDebt = newPrice[index].debt;\r\n    if (newPrice[index].active) {\r\n      newDebt +=\r\n        ((new Date().getTime() - newPrice[index].time) / 1000) *\r\n        services[index].price;\r\n    }\r\n    newPrice[index] = {\r\n      time: new Date().getTime(),\r\n      active: !newPrice[index].active,\r\n      debt: newDebt,\r\n    };\r\n    setPricing(newPrice);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      let currentDebt = pricing.reduce((a, b) => ({ debt: a.debt + b.debt }));\r\n      currentDebt = currentDebt.debt;\r\n      pricing.map((price, index) => {\r\n        if (price.time && price.active) {\r\n          currentDebt +=\r\n            ((new Date().getTime() - price.time) / 1000) *\r\n            services[index].price;\r\n        }\r\n      });\r\n      setFullDebt(Math.round((currentDebt + Number.EPSILON) * 100) / 100);\r\n    }, 5000);\r\n    return () => clearInterval(intervalId);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/service\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setServices(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <div>\r\n        <h1>Services</h1>\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>Services</h1>\r\n        <h2>Current debt: {fullDebt}$</h2>\r\n        <ul>\r\n          {services.map((service, index) => (\r\n            <li key={service.name}>\r\n              <h3>{service.name}</h3>\r\n              <div className=\"content\">\r\n                <p>\r\n                  {service.description}\r\n                  <br />\r\n                  {service.metrics}\r\n                  <br />\r\n                  <br />\r\n                  {service.price} $ per hour{\" \"}\r\n                  <button onClick={updatePricing(index)}>\r\n                    {service.active ? \"Disable\" : \"Activate\"}\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}