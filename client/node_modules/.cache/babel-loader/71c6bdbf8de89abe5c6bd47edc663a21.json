{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elarvav\\\\Desktop\\\\marketplace\\\\client\\\\src\\\\components\\\\Monitoring.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Chartjs from \"chart.js\";\nconst chartConfig = {\n  type: \"bar\",\n  data: {},\n  options: {}\n};\n\nconst Monitoring = () => {\n  const chartContainer = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Monitoring;","map":{"version":3,"sources":["C:/Users/elarvav/Desktop/marketplace/client/src/components/Monitoring.js"],"names":["React","useEffect","useRef","useState","Chartjs","chartConfig","type","data","options","Monitoring","chartContainer","chartInstance","setChartInstance","current","newChartInstance"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,KADY;AAElBC,EAAAA,IAAI,EAAE,EAFY;AAGlBC,EAAAA,OAAO,EAAE;AAHS,CAApB;;AAMA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,cAAc,GAAGR,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,cAAc,IAAIA,cAAc,CAACG,OAArC,EAA8C;AAC5C,YAAMC,gBAAgB,GAAG,IAAIV,OAAJ,CAAYM,cAAc,CAACG,OAA3B,EAAoCR,WAApC,CAAzB;AACAO,MAAAA,gBAAgB,CAACE,gBAAD,CAAhB;AACD;AACF,GALQ,EAKN,CAACJ,cAAD,CALM,CAAT;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,GAAG,EAAEA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAhBD;;AAiBA,eAAeD,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Chartjs from \"chart.js\";\r\n\r\nconst chartConfig = {\r\n  type: \"bar\",\r\n  data: {},\r\n  options: {},\r\n};\r\n\r\nconst Monitoring = () => {\r\n  const chartContainer = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartContainer} />\r\n    </div>\r\n  );\r\n};\r\nexport default Monitoring;\r\n"]},"metadata":{},"sourceType":"module"}