{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elarvav\\\\Desktop\\\\marketplace\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.states = {\n      name: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        email,\n        password\n      } = this.state;\n      const newUser = {\n        name,\n        email,\n        password\n      };\n      this.props.register(newUser);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === 'REGISTER_FAIL') {\n        this.state({\n          msg: error.msg.msg\n        });\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), this.state.msg ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }\n    }, this.state.msg) : null));\n  }\n\n}\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/elarvav/Desktop/marketplace/client/src/components/auth/Register.js"],"names":["React","Component","Form","Input","Button","Checkbox","connect","PropTypes","register","Register","states","name","email","password","msg","onChange","e","setState","target","value","onSubmit","preventDefault","state","newUser","props","componentDidUpdate","prevProps","error","id","render","propTypes","isAuthenticated","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions';\r\n\r\n\r\nclass Register extends Component {\r\n    states = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        msg: null\r\n    };\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        register: PropTypes.func.isRequired\r\n    }\r\n\r\n    onChange = (e) => {\r\n\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, email, password } = this.state;\r\n        const newUser = {\r\n            name,\r\n            email,\r\n            password\r\n        };\r\n        this.props.register(newUser);\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { error } = this.props;\r\n        if (error !== prevProps.error) {\r\n            if (error.id === 'REGISTER_FAIL') {\r\n                this.state({ msg: error.msg.msg });\r\n                this.setState({ msg: null });\r\n            }\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <label>\r\n                        Name:\r\n                  </label>\r\n                    <input type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} />\r\n                    <input type=\"email\" id=\"email\" name=\"email\" onChange={this.onChange} />\r\n                    <input type=\"password\" id=\"password\" name=\"password\" onChange={this.onChange} />\r\n                    <input type=\"submit\" value=\"Register\" />\r\n        {this.state.msg ? <p>{this.state.msg}</p>:null}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { register }\r\n)(Register);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}