{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elarvav\\\\Desktop\\\\marketplace\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.onChange = e => {\n      this.props.clearErrors();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"login:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), this.state.msg ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }\n    }, this.state.msg) : null));\n  }\n\n}\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(Register);","map":{"version":3,"sources":["C:/Users/elarvav/Desktop/marketplace/client/src/components/auth/Login.js"],"names":["React","Component","Form","Input","Button","Checkbox","connect","PropTypes","login","clearErrors","Register","state","email","password","msg","onChange","e","props","setState","target","name","value","onSubmit","preventDefault","componentDidUpdate","prevProps","error","id","render","propTypes","isAuthenticated","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors} from '../../actions/errorActions';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        msg: null\r\n    };\r\n\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        error: PropTypes.object.isRequired,\r\n        login: PropTypes.func.isRequired,\r\n        clearErrors: PropTypes.func.isRequired\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.props.clearErrors();\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = this.state;\r\n    };\r\n    componentDidUpdate(prevProps){\r\n        const {error }=this.props;\r\n        if(error!== prevProps.error){\r\n            if(error.id === 'LOGIN_FAIL'){\r\n                this.setState({msg:error.msg.msg});\r\n            }else{\r\n                this.setState({msg:null});\r\n            }\r\n        }\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <label>\r\n                        login:\r\n                  </label>\r\n                    <input type=\"email\" id=\"email\" name=\"email\" onChange={this.onChange} />\r\n                    <input type=\"password\" id=\"password\" name=\"password\" onChange={this.onChange} />\r\n                    <input type=\"submit\" value=\"Login\" />\r\n        {this.state.msg ? <p>{this.state.msg}</p> : null}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login, clearErrors }\r\n)(Register);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}